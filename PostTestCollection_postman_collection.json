{
	"info": {
		"_postman_id": "9d08c063-1355-42dc-8cb1-c4964fa2ce24",
		"name": "PostTestCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21720707"
	},
	"item": [
		{
			"name": "GetPostList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 999ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(999);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Check body data is array\", function () {\r",
							"    pm.expect(jsonData.data).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].id is string\", function () {\r",
							"    pm.expect(jsonData.data[0].id).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].picture is undefined\", function () {\r",
							"    pm.expect(jsonData.data[0].picture).to.be.an(\"undefined\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].image is string\", function () {\r",
							"    pm.expect(jsonData.data[0].image).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].likes is number\", function () {\r",
							"    pm.expect(jsonData.data[0].likes).to.be.an(\"number\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].tags is array\", function () {\r",
							"    pm.expect(jsonData.data[0].tags).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].text is string\", function () {\r",
							"    pm.expect(jsonData.data[0].text).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].publishDate is string\", function () {\r",
							"    pm.expect(jsonData.data[0].publishDate). to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.data[0].updatedDate). to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].owner.id \", function () {\r",
							"    pm.expect(jsonData.data[0].owner.id).to.eql(\"60d0fe4f5311236168a10a0b\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].owner.title\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.title).to.eql(\"miss\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].owner.firstName\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.firstName).to.eql(\"Margarita\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].owner.lastName\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.lastName).to.eql(\"Vicente\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].owner.gender is undefined\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.gender).to.be.an(\"undefined\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].owner.picture\", function () {\r",
							"    pm.expect(jsonData.data[0].owner.picture).to.eql(\"https://randomuser.me/api/portraits/med/women/5.jpg\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[19].id is string\", function () {\r",
							"    pm.expect(jsonData.data[19].id).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[20] is undefined\", function () {\r",
							"    pm.expect(jsonData.data[20]).to.be.an(\"undefined\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check limit is 20\", function () {\r",
							"    pm.expect(jsonData.limit).to.eql(20);\r",
							"});\r",
							"\r",
							"pm.test(\"Check page is 0\", function () {\r",
							"    pm.expect(jsonData.page).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Check body total is number\", function () {\r",
							"    pm.expect(jsonData.total).to.be.an(\"number\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}post",
					"host": [
						"{{host}}post"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreatPost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 999ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(999);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"postId\", jsonData.id);\r",
							"\r",
							"pm.test(\"Check body id is string\", function () {\r",
							"     console.log(jsonData.id)\r",
							"    pm.expect(jsonData.id).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body image is string\", function () {\r",
							"    pm.expect(jsonData.image).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body likes is number\", function () {\r",
							"    pm.expect(jsonData.likes).to.be.an(\"number\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body link is string\", function () {\r",
							"    pm.expect(jsonData.link).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body tags is array\", function () {\r",
							"    pm.expect(jsonData.tags).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							" pm.test(\"Check body text \", function () {\r",
							"    pm.expect(jsonData.text).to.eql(\"ice caves in the wild landscape photo of ice near ...\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body publishDate is string\", function () {\r",
							"    pm.expect(jsonData.publishDate). to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.updatedDate). to.be.a('string');\r",
							"});\r",
							"\r",
							" pm.test(\"Check body owner.id \", function () {\r",
							"     console.log(jsonData.owner.id)\r",
							"    pm.expect(jsonData.owner.id).to.eql(\"60d0fe4f5311236168a10a0b\");\r",
							"});\r",
							"\r",
							" pm.test(\"Check body owner.title \", function () {\r",
							"    pm.expect(jsonData.owner.title).to.eql(\"miss\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body owner.firstName\", function () {\r",
							"    console.log(jsonData.owner.firstName)\r",
							"    pm.expect(jsonData.owner.firstName).to.eql(\"Margarita\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body owner.lastName\", function () {\r",
							"    pm.expect(jsonData.owner.lastName).to.eql(\"Vicente\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body owner.picture\", function () {\r",
							"    pm.expect(jsonData.owner.picture).to.eql(\"https://randomuser.me/api/portraits/med/women/5.jpg\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"636ac6783db7dc5f16fce26c\",\r\n    \"image\": \"{{$randomImageUrl}}\",\r\n    \"likes\": 31,\r\n    \"link\": \"\",\r\n    \"tags\": [\r\n        \"snow\",\r\n        \"ice\",\r\n        \"mountain\"\r\n    ],\r\n    \"text\": \"ice caves in the wild landscape photo of ice near ...\",\r\n    \"publishDate\": \"2022-11-08T21:13:28.804Z\",\r\n    \"updatedDate\": \"2022-11-08T21:13:28.804Z\",\r\n    \"owner\":       \"60d0fe4f5311236168a10a0b\"\r\n        \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}post/create",
					"host": [
						"{{host}}post"
					],
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPostByID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 999ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(999);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"postId\", jsonData.id);\r",
							"\r",
							"pm.test(\"Check body id is string\", function () {\r",
							"     console.log(jsonData.id)\r",
							"    pm.expect(jsonData.id).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body image is string\", function () {\r",
							"    pm.expect(jsonData.image).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body likes is number\", function () {\r",
							"    pm.expect(jsonData.likes).to.be.an(\"number\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body link is string\", function () {\r",
							"    pm.expect(jsonData.link).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body tags is array\", function () {\r",
							"    pm.expect(jsonData.tags).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							" pm.test(\"Check body text \", function () {\r",
							"    pm.expect(jsonData.text).to.eql(\"ice caves in the wild landscape photo of ice near ...\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body publishDate is string\", function () {\r",
							"    pm.expect(jsonData.publishDate). to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.updatedDate). to.be.a('string');\r",
							"});\r",
							"\r",
							" pm.test(\"Check body owner.id \", function () {\r",
							"     console.log(jsonData.owner.id)\r",
							"    pm.expect(jsonData.owner.id).to.eql(\"60d0fe4f5311236168a10a0b\");\r",
							"});\r",
							"\r",
							" pm.test(\"Check body owner.title \", function () {\r",
							"    pm.expect(jsonData.owner.title).to.eql(\"miss\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body owner.firstName\", function () {\r",
							"    console.log(jsonData.owner.firstName)\r",
							"    pm.expect(jsonData.owner.firstName).to.eql(\"Margarita\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body owner.lastName\", function () {\r",
							"    pm.expect(jsonData.owner.lastName).to.eql(\"Vicente\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body owner.picture\", function () {\r",
							"    pm.expect(jsonData.owner.picture).to.eql(\"https://randomuser.me/api/portraits/med/women/5.jpg\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{host}}post/{{postId}}",
					"host": [
						"{{host}}post"
					],
					"path": [
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdatePost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 999ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(999);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"postId\", jsonData.id);\r",
							"\r",
							"pm.test(\"Check body id is string\", function () {\r",
							"     console.log(jsonData.id)\r",
							"    pm.expect(jsonData.id).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body image is string\", function () {\r",
							"    pm.expect(jsonData.image).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body likes is number\", function () {\r",
							"    pm.expect(jsonData.likes).to.be.an(\"number\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body link is string\", function () {\r",
							"    pm.expect(jsonData.link).to.be.an(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body tags is array\", function () {\r",
							"    pm.expect(jsonData.tags).to.be.an(\"array\");\r",
							"});\r",
							"\r",
							" pm.test(\"Check body text \", function () {\r",
							"    pm.expect(jsonData.text).to.eql(\"Самый быстрый самолет не успеет за тобою...\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body publishDate is string\", function () {\r",
							"    pm.expect(jsonData.publishDate). to.be.a('string');\r",
							"});\r",
							"\r",
							"pm.test(\"Check body updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.updatedDate). to.be.a('string');\r",
							"});\r",
							"\r",
							" pm.test(\"Check body owner.id \", function () {\r",
							"     console.log(jsonData.owner.id)\r",
							"    pm.expect(jsonData.owner.id).to.eql(\"60d0fe4f5311236168a10a0b\");\r",
							"});\r",
							"\r",
							" pm.test(\"Check body owner.title \", function () {\r",
							"    pm.expect(jsonData.owner.title).to.eql(\"miss\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body owner.firstName\", function () {\r",
							"    console.log(jsonData.owner.firstName)\r",
							"    pm.expect(jsonData.owner.firstName).to.eql(\"Margarita\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body owner.lastName\", function () {\r",
							"    pm.expect(jsonData.owner.lastName).to.eql(\"Vicente\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check body owner.picture\", function () {\r",
							"    pm.expect(jsonData.owner.picture).to.eql(\"https://randomuser.me/api/portraits/med/women/5.jpg\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"likes\": 39,\r\n    \"text\": \"Самый быстрый самолет не успеет за тобою...\"\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}post/{{postId}}",
					"host": [
						"{{host}}post"
					],
					"path": [
						"{{postId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeletePost",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response time is less than 999ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(999);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"postId\"));\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": \"636e64328fa4ba0614fa9d42\",\r\n    \"image\": \"http://placeimg.com/640/480\",\r\n    \"likes\": 31,\r\n    \"link\": \"\",\r\n    \"tags\": [\r\n        \"snow\",\r\n        \"ice\",\r\n        \"mountain\"\r\n    ],\r\n    \"text\": \"ice caves in the wild landscape photo of ice near ...\",\r\n    \"publishDate\": \"2022-11-11T15:03:14.314Z\",\r\n    \"updatedDate\": \"2022-11-11T15:03:14.314Z\",\r\n    \"owner\": {\r\n        \"id\": \"60d0fe4f5311236168a10a0b\",\r\n        \"title\": \"miss\",\r\n        \"firstName\": \"Margarita\",\r\n        \"lastName\": \"Vicente\",\r\n        \"picture\": \"https://randomuser.me/api/portraits/med/women/5.jpg\"\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{host}}post/{{postId}}",
					"host": [
						"{{host}}post"
					],
					"path": [
						"{{postId}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "6360dc7f1fcc357955e6d0ea",
				"type": "string"
			},
			{
				"key": "key",
				"value": "app-id",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "postId",
			"value": ""
		}
	]
}